/**
 * iikoCloud API
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.restomatik.client.api

import ru.restomatik.client.core.JsonSupport._
import ru.restomatik.client.model._
import sttp.client3._
import sttp.model.Method

object OrdersApi {

def apply(baseUrl: String = "https://api-ru.iiko.services") = new OrdersApi(baseUrl)
}

class OrdersApi(baseUrl: String) {

  /**
   *    > Allowed from version `7.7.1`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param addCustomerToTableOrderRequest 
   */
  def api1OrderAddCustomerPost(authorization: String, timeout: Option[Int] = None, addCustomerToTableOrderRequest: Option[AddCustomerToTableOrderRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/add_customer")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(addCustomerToTableOrderRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `7.4.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param addOrderItemsRequest 
   */
  def api1OrderAddItemsPost(authorization: String, timeout: Option[Int] = None, addOrderItemsRequest: Option[AddOrderItemsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/add_items")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(addOrderItemsRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `8.2.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param addOrderPaymentsRequest 
   */
  def api1OrderAddPaymentsPost(authorization: String, timeout: Option[Int] = None, addOrderPaymentsRequest: Option[AddOrderPaymentsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/add_payments")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(addOrderPaymentsRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `7.4.6`.
   * 
   * Expected answers:
   *   code 200 : TableOrdersResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param getTableOrdersByIdRequest 
   */
  def api1OrderByIdPost(authorization: String, timeout: Option[Int] = None, getTableOrdersByIdRequest: Option[GetTableOrdersByIdRequest] = None
): Request[Either[ResponseException[String, Exception], TableOrdersResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/by_id")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(getTableOrdersByIdRequest)
      .response(asJson[TableOrdersResponse])

  /**
   *    > Allowed from version `7.4.6`.
   * 
   * Expected answers:
   *   code 200 : TableOrdersResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param getTableOrdersByTableRequest 
   */
  def api1OrderByTablePost(authorization: String, timeout: Option[Int] = None, getTableOrdersByTableRequest: Option[GetTableOrdersByTableRequest] = None
): Request[Either[ResponseException[String, Exception], TableOrdersResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/by_table")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(getTableOrdersByTableRequest)
      .response(asJson[TableOrdersResponse])

  /**
   * > Method will fail if there are any processed payments in the order.  > If all payments in the order are unprocessed they will be removed and replaced with new ones.   > Allowed from version `7.7.4`.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param changePaymentsRequest 
   */
  def api1OrderChangePaymentsPost(authorization: String, timeout: Option[Int] = None, changePaymentsRequest: Option[ChangePaymentsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/change_payments")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(changePaymentsRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `7.4.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param closeTableOrderRequest 
   */
  def api1OrderClosePost(authorization: String, timeout: Option[Int] = None, closeTableOrderRequest: Option[CloseTableOrderRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/close")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(closeTableOrderRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `7.4.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : TableOrderResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param createTableOrderRequest 
   */
  def api1OrderCreatePost(authorization: String, timeout: Option[Int] = None, createTableOrderRequest: Option[CreateTableOrderRequest] = None
): Request[Either[ResponseException[String, Exception], TableOrderResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/create")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(createTableOrderRequest)
      .response(asJson[TableOrderResponse])

  /**
   *    > Allowed from version `7.7.1`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param initTableOrderByPosOrderRequest 
   */
  def api1OrderInitByPosOrderPost(authorization: String, timeout: Option[Int] = None, initTableOrderByPosOrderRequest: Option[InitTableOrderByPosOrderRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/init_by_posOrder")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(initTableOrderByPosOrderRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   *    > Allowed from version `7.7.1`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param initTableOrderRequest 
   */
  def api1OrderInitByTablePost(authorization: String, timeout: Option[Int] = None, initTableOrderRequest: Option[InitTableOrderRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/init_by_table")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(initTableOrderRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   * > Deprecated, use `api/1/order/change_payments` method instead.   > Allowed from version `7.4.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param updateOrderPaymentsRequest 
   */
  def api1OrderUpdatePaymentsPost(authorization: String, timeout: Option[Int] = None, updateOrderPaymentsRequest: Option[UpdateOrderPaymentsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/update_payments")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(updateOrderPaymentsRequest)
      .response(asJson[CorrelationIdResponse])

}
