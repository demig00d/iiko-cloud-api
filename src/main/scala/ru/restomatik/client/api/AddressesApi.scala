/**
 * iikoCloud API
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.restomatik.client.api

import ru.restomatik.client.core.JsonSupport._
import ru.restomatik.client.model._
import sttp.client3._
import sttp.model.Method

object AddressesApi {

def apply(baseUrl: String = "https://api-ru.iiko.services") = new AddressesApi(baseUrl)
}

class AddressesApi(baseUrl: String) {

  /**
   * Expected answers:
   *   code 200 : CitiesResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param citiesRequest 
   */
  def api1CitiesPost(authorization: String, timeout: Option[Int] = None, citiesRequest: Option[CitiesRequest] = None
): Request[Either[ResponseException[String, Exception], CitiesResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/cities")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(citiesRequest)
      .response(asJson[CitiesResponse])

  /**
   * Expected answers:
   *   code 200 : RegionsResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param regionsRequest 
   */
  def api1RegionsPost(authorization: String, timeout: Option[Int] = None, regionsRequest: Option[RegionsRequest] = None
): Request[Either[ResponseException[String, Exception], RegionsResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/regions")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(regionsRequest)
      .response(asJson[RegionsResponse])

  /**
   * Expected answers:
   *   code 200 : StreetsResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param streetsByCityRequest 
   */
  def api1StreetsByCityPost(authorization: String, timeout: Option[Int] = None, streetsByCityRequest: Option[StreetsByCityRequest] = None
): Request[Either[ResponseException[String, Exception], StreetsResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/streets/by_city")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(streetsByCityRequest)
      .response(asJson[StreetsResponse])

  /**
   * Expected answers:
   *   code 200 : StreetsByIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param streetsByIdRequest 
   */
  def api1StreetsByIdPost(authorization: String, timeout: Option[Int] = None, streetsByIdRequest: Option[StreetsByIdRequest] = None
): Request[Either[ResponseException[String, Exception], StreetsByIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/streets/by_id")
      .contentType("application/json")
      .header("Authorization", s"Bearer $authorization")
      .header("Timeout", timeout.toString)
      .body(streetsByIdRequest)
      .response(asJson[StreetsByIdResponse])

}
