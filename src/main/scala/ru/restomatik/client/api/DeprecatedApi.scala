/**
 * iikoCloud API
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.restomatik.client.api

import ru.restomatik.client.core.JsonSupport._
import ru.restomatik.client.model._
import sttp.client3._
import sttp.model.Method

object DeprecatedApi {

def apply(baseUrl: String = "https://api-ru.iiko.services") = new DeprecatedApi(baseUrl)
}

class DeprecatedApi(baseUrl: String) {

  /**
   * > Deprecated, all checks are available in `api/1/deliveries/create`.
   * 
   * Expected answers:
   *   code 200 : CheckCreateOrderResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param createOrderRequest 
   */
  def api1DeliveriesCheckCreatePost(authorization: String, timeout: Option[Int] = None, createOrderRequest: Option[CreateOrderRequest] = None
): Request[Either[ResponseException[String, Exception], CheckCreateOrderResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/deliveries/check_create")
      .contentType("application/json")
      .header("Authorization", authorization.toString)
      .header("Timeout", timeout.toString)
      .body(createOrderRequest)
      .response(asJson[CheckCreateOrderResponse])

  /**
   * > Deprecated, use `api/1/deliveries/change_payments` method instead.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param updateOrderPaymentsRequest 
   */
  def api1DeliveriesUpdateOrderPaymentsPost(authorization: String, timeout: Option[Int] = None, updateOrderPaymentsRequest: Option[UpdateOrderPaymentsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/deliveries/update_order_payments")
      .contentType("application/json")
      .header("Authorization", authorization.toString)
      .header("Timeout", timeout.toString)
      .body(updateOrderPaymentsRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   * > Deprecated, use `api/1/order/change_payments` method instead.   > Allowed from version `7.4.6`.   > This method is a command. Use `api/1/commands/status` method to get the progress status.
   * 
   * Expected answers:
   *   code 200 : CorrelationIdResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   * @param updateOrderPaymentsRequest 
   */
  def api1OrderUpdatePaymentsPost(authorization: String, timeout: Option[Int] = None, updateOrderPaymentsRequest: Option[UpdateOrderPaymentsRequest] = None
): Request[Either[ResponseException[String, Exception], CorrelationIdResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/api/1/order/update_payments")
      .contentType("application/json")
      .header("Authorization", authorization.toString)
      .header("Timeout", timeout.toString)
      .body(updateOrderPaymentsRequest)
      .response(asJson[CorrelationIdResponse])

  /**
   * > Deprecated, use `POST api/1/organizations`.
   * 
   * Expected answers:
   *   code 200 : GetSimpleOrganizationsResponse (Success)
   *   code 400 : ErrorResponse (Bad Request)
   *   code 401 : ErrorResponse (Unauthorized)
   *   code 500 : ErrorResponse (Server Error)
   *   code 408 : ErrorResponse (Request Timeout)
   * 
   * @param authorization Authorization token.
   * @param timeout Timeout in seconds.
   */
  def api1OrganizationsGet(authorization: String, timeout: Option[Int] = None
): Request[Either[ResponseException[String, Exception], GetSimpleOrganizationsResponse], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/api/1/organizations")
      .contentType("application/json")
      .header("Authorization", authorization.toString)
      .header("Timeout", timeout.toString)
      .response(asJson[GetSimpleOrganizationsResponse])

}
