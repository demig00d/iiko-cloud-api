/**
 * iikoCloud API
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.restomatik.client.model

import ru.restomatik.client.model.DeliveryStatus._
import ru.restomatik.client.model.OrderServiceType._
import ru.restomatik.client.model.OrderSortProperty._
import ru.restomatik.client.model.SortDirection._

import java.util.UUID

  /**
   * Request for information about orders from external source and based on additional filters.
   */
case class OrdersByDeliveryDateAndFilterRequest(
  /* Organization ID for which an order search will be performed.                Can be obtained by `/api/1/organizations` operation. */
  organizationIds: Seq[UUID],
  /* List of terminal groups IDs. */
  terminalGroupIds: Option[Seq[UUID]] = None,
  /* Order delivery date (Local for delivery terminal). Lower limit.                Order details are stored for 90 days. */
  deliveryDateFrom: Option[String] = None,
  /* Order delivery date (Local for delivery terminal). Upper limit. */
  deliveryDateTo: Option[String] = None,
  /* Allowed order statuses. */
  statuses: Option[Seq[DeliveryStatus]] = None,
  /* If true, delivery has a problem.  > Conditions under which the order has a problem:  > * order.problem.hasProblem is true;  > * order status is Unconfirmed and CookingStartTime before now;  > * order status is ReadyForCooking and (CookingStartTime + timeToCookingErrorTimeout) before now;  > * order status is CookingCompleted or Waiting and (CookingStartTime + cookingTimeout) before now. */
  hasProblem: Option[Boolean] = None,
  orderServiceType: Option[OrderServiceType] = None,
  /* Value for search. Used for prefix search. */
  searchText: Option[String] = None,
  /* Error timeout for status time to cooking, in seconds. */
  timeToCookingErrorTimeout: Option[Int] = None,
  /* Expected cooking time, in seconds. */
  cookingTimeout: Option[Int] = None,
  sortProperty: Option[OrderSortProperty] = None,
  sortDirection: Option[SortDirection] = None,
  /* Maximum number of items returned. */
  rowsCount: Option[Int] = None,
  /* Source keys. */
  sourceKeys: Option[Seq[String]] = None,
  /* Order IDs.                > Must be null if \"posOrderIds\" is not null. */
  orderIds: Option[Seq[UUID]] = None,
  /* POS order IDs.                > Must be null if \"orderIds\" is not null. */
  posOrderIds: Option[Seq[UUID]] = None
)

object OrdersByDeliveryDateAndFilterRequestEnums {

}
